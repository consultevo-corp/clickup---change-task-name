// The doPost function to handle incoming POST requests
function doPost(e) {
  var logDetails = ''; // Variable to store log details
  try {
    // Parse the JSON payload
    var payload = JSON.parse(e.postData.contents);

    // Log the payload to see its structure
    Logger.log(JSON.stringify(payload));

    // Open the target spreadsheet and sheet
    var ss = SpreadsheetApp.openById('[spreadsheet ID]'); // enter spreadsheet ID
    var sheet = ss.getSheetByName('Sheet Name'); // enter sheet name

    // Check and add headers if they don't exist
    if (sheet.getLastRow() === 0) {
      sheet.appendRow(['Task ID', 'First Name', 'Last Name']);
    }

    // Extract relevant fields from the payload
    var taskId = payload.payload.id;
    var firstName = payload.payload.custom_fields.find(field => field.name === 'First Name')?.value || '';
    var lastName = payload.payload.custom_fields.find(field => field.name === 'Last Name')?.value || '';

    // Append the extracted fields as a new row
    sheet.appendRow([taskId, firstName, lastName]);

    // Update the task name in ClickUp
    updateTask(taskId, firstName, lastName);

    // Return a response to the webhook
    return ContentService.createTextOutput('Success');
  } catch (error) {
    logDetails = 'Error in doPost: ' + error.toString();
    Logger.log(logDetails);
    appendLogToSheet(logDetails); // Append log details to the sheet
    return ContentService.createTextOutput('Error: ' + error.toString());
  }
}

// Function to update the task name in ClickUp
function updateTask(taskId, firstName, lastName) {
  try {
    var apiToken = '[ClickUP API]'; // enter your CLickUP API
    var url = 'https://api.clickup.com/api/v2/task/' + taskId;

    var payload = {
      'name': `${firstName} ${lastName}`
    };

    var options = {
      'method': 'put',
      'contentType': 'application/json',
      'headers': {
        'Authorization': apiToken
      },
      'payload': JSON.stringify(payload),
      'muteHttpExceptions': true
    };

    var response = UrlFetchApp.fetch(url, options);
    Logger.log('Update task response: ' + response.getContentText());
    if (response.getResponseCode() !== 200) {
      throw new Error('API response error: ' + response.getContentText());
    }
  } catch (error) {
    var logDetails = 'Error in updateTask: ' + error.toString();
    Logger.log(logDetails);
    appendLogToSheet(logDetails); // Append log details to the sheet
  }
}

// Function to append log details to the last row in Column D
function appendLogToSheet(logDetails) {
  var ss = SpreadsheetApp.openById('[spreadsheet ID]'); // enter spreadsheet ID
  var sheet = ss.getSheetByName('Sheet Name'); // enter sheet name
  var lastRow = sheet.getLastRow();
  sheet.getRange(lastRow, 4).setValue(logDetails); // Column D is the 4th column
}
